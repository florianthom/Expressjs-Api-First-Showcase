/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Articles Api
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from 'zod';

export const getAllArticleQueryArticleQueryFilterDtoArticleIdDefault = null;export const getAllArticleQueryPaginationFilterDtoPageSizeDefault = 10;export const getAllArticleQueryPaginationFilterDtoPageNumberDefault = 0;

export const getAllArticleQueryParams = zod.object({
  "articleQueryFilterDto": zod.object({
  "articleId": zod.string().uuid().optional()
}).optional(),
  "paginationFilterDto": zod.object({
  "pageSize": zod.number().default(getAllArticleQueryPaginationFilterDtoPageSizeDefault),
  "pageNumber": zod.number().optional()
}).optional()
})

export const getAllArticleResponse = zod.object({
  "pageSize": zod.number().optional(),
  "pageNumber": zod.number().optional().describe('First page number: 0'),
  "previousPage": zod.string().url().optional().describe('Null if no previous page available'),
  "nextPage": zod.string().url().optional().describe('Null if no next page available'),
  "itemsTotal": zod.number().optional(),
  "pagesTotal": zod.number().optional()
}).and(zod.object({
  "data": zod.array(zod.object({
  "createdAt": zod.string().datetime({}).optional(),
  "createdBy": zod.string().optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "updatedBy": zod.string().optional(),
  "id": zod.string().uuid().optional(),
  "deleted": zod.boolean().optional()
})).optional()
}))

